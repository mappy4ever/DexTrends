name: Performance Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths:
      - 'components/**'
      - 'pages/**'
      - 'utils/**'
      - 'package*.json'
      - 'next.config.mjs'
      - 'tailwind.config.js'

concurrency:
  group: performance-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  # Job 1: Bundle Size Analysis
  bundle-analysis:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-perf-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-perf-

      - name: Install dependencies
        run: npm ci

      - name: Build and analyze bundle
        run: |
          # Build with bundle analyzer
          ANALYZE=true npm run build > build-output.txt 2>&1 || true
          
          # Extract bundle sizes
          echo "## Bundle Size Report" > bundle-report.md
          echo "" >> bundle-report.md
          
          # Parse build output for sizes
          if grep -q "Page" build-output.txt; then
            echo "### Page Sizes" >> bundle-report.md
            echo "\`\`\`" >> bundle-report.md
            grep -A 20 "Page" build-output.txt | grep -E "└|├" >> bundle-report.md || true
            echo "\`\`\`" >> bundle-report.md
          fi
          
          # Get total bundle size
          TOTAL_SIZE=$(du -sh .next | cut -f1)
          echo "" >> bundle-report.md
          echo "**Total Build Size:** $TOTAL_SIZE" >> bundle-report.md

      - name: Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: |
            .next/analyze/
            bundle-report.md
          retention-days: 30

      - name: Check bundle size limits
        id: size-check
        run: |
          # Define size limits (in KB)
          MAX_JS_SIZE=500
          MAX_CSS_SIZE=100
          
          # Check JavaScript bundle sizes
          find .next/static/chunks -name "*.js" -size +${MAX_JS_SIZE}k | while read file; do
            SIZE=$(du -k "$file" | cut -f1)
            echo "Warning: $file is ${SIZE}KB (limit: ${MAX_JS_SIZE}KB)"
          done

  # Job 2: Lighthouse CI
  lighthouse:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        page:
          - name: "Homepage"
            url: "/"
          - name: "Pokedex"
            url: "/pokedex"
          - name: "Trending"
            url: "/trending"
          - name: "Collections"
            url: "/collections"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

      - name: Start server
        run: |
          npm run start &
          sleep 10

      - name: Run Lighthouse CI - ${{ matrix.page.name }}
        uses: treosh/lighthouse-ci-action@v11
        with:
          urls: |
            http://localhost:3000${{ matrix.page.url }}
          uploadArtifacts: true
          temporaryPublicStorage: true
          configPath: ./lighthouserc.json

      - name: Format Lighthouse results
        id: lighthouse-results
        run: |
          # Extract scores from Lighthouse results
          REPORT_PATH="$(find . -name "*.report.json" | head -1)"
          if [ -f "$REPORT_PATH" ]; then
            PERFORMANCE=$(jq '.categories.performance.score * 100' "$REPORT_PATH")
            ACCESSIBILITY=$(jq '.categories.accessibility.score * 100' "$REPORT_PATH")
            BEST_PRACTICES=$(jq '.categories."best-practices".score * 100' "$REPORT_PATH")
            SEO=$(jq '.categories.seo.score * 100' "$REPORT_PATH")
            
            echo "performance=$PERFORMANCE" >> $GITHUB_OUTPUT
            echo "accessibility=$ACCESSIBILITY" >> $GITHUB_OUTPUT
            echo "best_practices=$BEST_PRACTICES" >> $GITHUB_OUTPUT
            echo "seo=$SEO" >> $GITHUB_OUTPUT
          fi

  # Job 3: Performance Benchmarks
  performance-benchmarks:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-perf-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-perf-

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install --with-deps chromium

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

      - name: Run performance tests
        run: npm run test:performance:ci
        env:
          PLAYWRIGHT_BROWSERS_PATH: ~/.cache/ms-playwright

      - name: Upload performance results
        uses: actions/upload-artifact@v4
        with:
          name: performance-test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  # Job 4: Memory Usage Tests
  memory-tests:
    name: Memory Usage Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

      - name: Memory usage analysis
        run: |
          # Start the server with memory tracking
          node --expose-gc --max-old-space-size=4096 -r ./scripts/memory-tracker.js node_modules/.bin/next start &
          SERVER_PID=$!
          
          sleep 10
          
          # Run memory stress test
          echo "## Memory Usage Report" > memory-report.md
          echo "" >> memory-report.md
          
          # Initial memory
          INITIAL_MEM=$(ps -o rss= -p $SERVER_PID | awk '{print $1/1024 " MB"}')
          echo "Initial Memory: $INITIAL_MEM" >> memory-report.md
          
          # Simulate load
          for i in {1..10}; do
            curl -s http://localhost:3000 > /dev/null
            curl -s http://localhost:3000/pokedex > /dev/null
            curl -s http://localhost:3000/trending > /dev/null
            sleep 1
          done
          
          # Memory after load
          LOAD_MEM=$(ps -o rss= -p $SERVER_PID | awk '{print $1/1024 " MB"}')
          echo "Memory after load: $LOAD_MEM" >> memory-report.md
          
          # Kill server
          kill $SERVER_PID

      - name: Upload memory report
        uses: actions/upload-artifact@v4
        with:
          name: memory-usage-report
          path: memory-report.md
          retention-days: 30

  # Job 5: Performance Summary
  performance-summary:
    name: Performance Summary
    runs-on: ubuntu-latest
    needs: [bundle-analysis, lighthouse, performance-benchmarks, memory-tests]
    if: github.event_name == 'pull_request' && always()
    steps:
      - name: Download all performance artifacts
        uses: actions/download-artifact@v4
        with:
          path: performance-artifacts

      - name: Generate performance report
        id: generate-report
        run: |
          echo "# Performance Test Summary" > performance-summary.md
          echo "" >> performance-summary.md
          echo "## Test Results" >> performance-summary.md
          echo "" >> performance-summary.md
          
          # Add bundle size report
          if [ -f "performance-artifacts/bundle-analysis/bundle-report.md" ]; then
            cat "performance-artifacts/bundle-analysis/bundle-report.md" >> performance-summary.md
            echo "" >> performance-summary.md
          fi
          
          # Add memory report
          if [ -f "performance-artifacts/memory-usage-report/memory-report.md" ]; then
            cat "performance-artifacts/memory-usage-report/memory-report.md" >> performance-summary.md
            echo "" >> performance-summary.md
          fi
          
          # Performance thresholds
          echo "## Performance Criteria" >> performance-summary.md
          echo "| Metric | Threshold | Status |" >> performance-summary.md
          echo "|--------|-----------|--------|" >> performance-summary.md
          echo "| Bundle Size | < 500KB | ⚠️ Check |" >> performance-summary.md
          echo "| Lighthouse Performance | > 90 | ⚠️ Check |" >> performance-summary.md
          echo "| Memory Usage | < 512MB | ⚠️ Check |" >> performance-summary.md

      - name: Comment performance report on PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('performance-summary.md', 'utf8');
            
            // Find existing comment
            const comments = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            
            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Performance Test Summary')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                comment_id: botComment.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: report
              });
            } else {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: report
              });
            }

  # Job 6: Compare with base branch
  performance-comparison:
    name: Performance Comparison
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Get PR bundle size
        run: |
          npm ci
          npm run build
          echo "PR_SIZE=$(du -sk .next | cut -f1)" >> $GITHUB_ENV

      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}

      - name: Get base bundle size
        run: |
          npm ci
          npm run build
          echo "BASE_SIZE=$(du -sk .next | cut -f1)" >> $GITHUB_ENV

      - name: Calculate difference
        run: |
          DIFF=$((PR_SIZE - BASE_SIZE))
          PERCENT=$((DIFF * 100 / BASE_SIZE))
          
          echo "## Bundle Size Comparison" > size-comparison.md
          echo "" >> size-comparison.md
          echo "| Branch | Size |" >> size-comparison.md
          echo "|--------|------|" >> size-comparison.md
          echo "| Base | ${BASE_SIZE}KB |" >> size-comparison.md
          echo "| PR | ${PR_SIZE}KB |" >> size-comparison.md
          echo "| Diff | ${DIFF}KB (${PERCENT}%) |" >> size-comparison.md
          
          if [ $PERCENT -gt 10 ]; then
            echo "" >> size-comparison.md
            echo "⚠️ **Warning:** Bundle size increased by more than 10%" >> size-comparison.md
          fi

      - name: Upload comparison
        uses: actions/upload-artifact@v4
        with:
          name: size-comparison
          path: size-comparison.md
          retention-days: 7