{
  "unimplementedFeatures": [],
  "duplicateImports": [
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/dynamic/DynamicComponents.tsx",
      "duplicate": "import type { DynamicOptions } from 'next/dynamic';",
      "original": "import dynamic from 'next/dynamic';"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/pokemon/EvolutionFlow.tsx",
      "duplicate": "import { GlassContainer } from '../ui/design-system';",
      "original": "import { CircularCard } from '../ui/design-system';"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/pokemon/tabs/CompetitiveTab.tsx",
      "duplicate": "import { showdownQueries } from '../../../utils/supabase';",
      "original": "import type { CompetitiveTierRecord } from '../../../utils/supabase';"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/tcg-set-detail/EnhancedCardGrid.tsx",
      "duplicate": "import { useEnhancedAnimation } from '../ui/EnhancedAnimationSystem';",
      "original": "import { InteractiveCard, easings } from '../ui/EnhancedAnimationSystem';"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/ui/ConsistentModal.tsx",
      "duplicate": "import type { ModalProps } from './ModalWrapper';",
      "original": "import Modal from './ModalWrapper';"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/ui/EnhancedModal.tsx",
      "duplicate": "import type { ModalProps } from './ModalWrapper';",
      "original": "import Modal from './ModalWrapper';"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/ui/PerformanceDashboard.tsx",
      "duplicate": "import type { Metric } from '../../utils/performanceMonitor';",
      "original": "import { usePerformanceMonitor } from '../../utils/performanceMonitor';"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/ui/PositionedModal.tsx",
      "duplicate": "import type { ModalProps } from './ModalWrapper';",
      "original": "import Modal from './ModalWrapper';"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/pages/pocketmode/decks.tsx",
      "duplicate": "import { PageLoader } from '@/components/ui/SkeletonLoadingSystem';",
      "original": "import { InlineLoader } from '@/components/ui/SkeletonLoadingSystem';"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/pages/pocketmode/expansions.tsx",
      "duplicate": "import { PageLoader } from '@/components/ui/SkeletonLoadingSystem';",
      "original": "import { InlineLoader } from '@/components/ui/SkeletonLoadingSystem';"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/pages/pokedex/[pokeid].tsx",
      "duplicate": "import { PageErrorBoundary } from \"../../components/ui\";",
      "original": "import { FullBleedWrapper } from \"../../components/ui\";"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/pages/pokemon/index.client.tsx",
      "duplicate": "import type { FC } from \"react\";",
      "original": "import React, { useState, useEffect } from \"react\";"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/pages/pokemon/regions/[region].tsx",
      "duplicate": "import { CircularButton } from \"../../../components/ui/design-system\";",
      "original": "import { StandardGlassContainer, SectionHeader } from \"../../../components/ui/design-system\";"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/pages/tcgsets/[setid].tsx",
      "duplicate": "import { useFavorites } from \"../../context/UnifiedAppContext\";",
      "original": "import { useTheme } from \"../../context/UnifiedAppContext\";"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/pages/tcgsets/[setid].tsx",
      "duplicate": "import { useViewSettings } from \"../../context/UnifiedAppContext\";",
      "original": "import { useTheme } from \"../../context/UnifiedAppContext\";"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/pages/tcgsets.tsx",
      "duplicate": "import { useViewSettings } from \"../context/UnifiedAppContext\";",
      "original": "import { useTheme } from \"../context/UnifiedAppContext\";"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/pages/tcgsets.tsx",
      "duplicate": "import { PageLoader } from '@/components/ui/SkeletonLoadingSystem';",
      "original": "import { InlineLoader } from '@/components/ui/SkeletonLoadingSystem';"
    }
  ],
  "commentedCode": [
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/CardList.tsx",
      "line": 189,
      "content": "// Custom comparison function for React.memo"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/PocketCardList.tsx",
      "line": 266,
      "content": "// Helper function to parse set code and number for sorting"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/TCGCardList.tsx",
      "line": 15,
      "content": "// Dynamic import for react-window to reduce bundle size"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/TCGCardList.tsx",
      "line": 39,
      "content": "// Helper function to determine the actual rarity based on card data"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/TrendingCards.tsx",
      "line": 20,
      "content": "// Memoized function to calculate price from card data"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/TrendingCards.tsx",
      "line": 32,
      "content": "// Memoized function to calculate trending data"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/dynamic/DynamicComponents.tsx",
      "line": 186,
      "content": "// Utility function to preload components"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/pokemon/PokemonTabSystem.tsx",
      "line": 68,
      "content": "// Cleanup function for old Pokemon tab preferences"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/providers/ToastProvider.tsx",
      "line": 26,
      "content": "// Helper function to convert toast options to notification options"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/providers/ToastProvider.tsx",
      "line": 58,
      "content": "// Helper function to convert notifications to toasts for the ToastContainer"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/qol/NotificationSystem.tsx",
      "line": 32,
      "content": "// Global showNotification function is already declared in AchievementSystem.tsx"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/ui/CollectionTracker.tsx",
      "line": 14,
      "content": "// BsSparkles import removed - not available in react-icons/bs"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/ui/EnhancedStarterSelector.tsx",
      "line": 138,
      "content": "// Helper function to get ability description"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/ui/LazyComponents.tsx",
      "line": 250,
      "content": "// Utility function to wrap any component with Suspense and loading state"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/ui/LazyMotion.tsx",
      "line": 22,
      "content": "// These prevent the direct import of framer-motion hooks"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/ui/PackOpening.tsx",
      "line": 192,
      "content": "// Helper function to create a timeout with tracking"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/ui/PrintableCardLists.tsx",
      "line": 152,
      "content": "// Helper function to get card image"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/ui/PrintableCardLists.tsx",
      "line": 168,
      "content": "// Helper function to get card price"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/ui/QATestingSuite.tsx",
      "line": 6,
      "content": "// Dynamic import of iPhone QA Tests"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/ui/RarityIcon.tsx",
      "line": 138,
      "content": "// Helper function to get rarity rank"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/ui/cards/PokemonCardItem.tsx",
      "line": 178,
      "content": "// Custom comparison function for better memoization"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/ui/cards/UnifiedCard.tsx",
      "line": 11,
      "content": "// import { useSmartMemo, useSmartCallback, withOptimizations } from \"../../../utils/reactOptimizations\";"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/ui/cards/UnifiedCard.tsx",
      "line": 100,
      "content": "// Helper function to derive set code from pack name"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/ui/cards/UnifiedCard.tsx",
      "line": 123,
      "content": "// Helper function to get display type (handles trainer subtypes)"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/ui/cards/UnifiedCard.tsx",
      "line": 844,
      "content": "// Temporarily disable optimizations to fix import issues"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/ui/design-system/glass-constants.ts",
      "line": 126,
      "content": "// Helper function to combine glass classes"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/ui/forms/EnhancedSearchBox.tsx",
      "line": 39,
      "content": "// const { searchHistory, addToHistory, removeFromHistory, getSuggestions } = useSearchHistory();"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/ui/modals/EnhancedCardModal.tsx",
      "line": 7,
      "content": "// import { PokemonTCGCard } from '../../../types';"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/ui/search/LiveSearchBar.tsx",
      "line": 44,
      "content": "// Return empty cleanup function when condition is false"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/ui/search/LiveSearchBar.tsx",
      "line": 80,
      "content": "// Helper function to measure text width"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/context/modules/stateInitializer.ts",
      "line": 94,
      "content": "// Helper function to safely parse JSON from localStorage"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/data/tcgRarity.ts",
      "line": 191,
      "content": "// Helper function to get rarity display"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/hooks/use3DTiltCard.ts",
      "line": 172,
      "content": "// Helper function to determine if a card should have holographic effects"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/hooks/use3DTiltCard.ts",
      "line": 179,
      "content": "// Helper function to get holographic gradient based on rarity"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/hooks/useContextualTheme.ts",
      "line": 153,
      "content": "// Helper function to safely apply theme classes"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/hooks/useContextualTheme.ts",
      "line": 161,
      "content": "// Helper function for button classes"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/hooks/useTypeEffectiveness.ts",
      "line": 148,
      "content": "// This would normally import from the existing typeEffectiveness utility"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/hooks/useTypeEffectiveness.ts",
      "line": 153,
      "content": "// Helper function to format effectiveness as text"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/hooks/useTypeEffectiveness.ts",
      "line": 164,
      "content": "// Helper function to get effectiveness color"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/lib/background-cache-warmer.ts",
      "line": 276,
      "content": "// Initialize on import if in production"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/lib/supabase.ts",
      "line": 419,
      "content": "// First try RPC function if it exists"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/lib/supabase.ts",
      "line": 457,
      "content": "// First try RPC function if it exists"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/pages/api/search/global.ts",
      "line": 126,
      "content": "// Helper function to search Pokemon"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/pages/api/search/global.ts",
      "line": 166,
      "content": "// Helper function to search TCG Cards"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/pages/api/search/global.ts",
      "line": 192,
      "content": "// Helper function to search TCG Sets"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/pages/api/tcg-sets/[setId]/complete.ts",
      "line": 92,
      "content": "// Create a function to fetch the data"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/pages/api/tcg-sets/[setId]/complete.ts",
      "line": 291,
      "content": "// Background refresh function for stale cache updates"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/pages/pocketmode/[pokemonid].tsx",
      "line": 55,
      "content": "// Helper function to map Pocket card names to PokeAPI IDs"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/pages/pocketmode/[pokemonid].tsx",
      "line": 163,
      "content": "// Helper function to get evolution cards for a Pokemon"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/pages/pocketmode/deckbuilder.tsx",
      "line": 151,
      "content": "// Helper function to get display type (handles trainer subtypes)"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/pages/pocketmode/index.tsx",
      "line": 129,
      "content": "// Helper function to get display type for filtering (same logic as UnifiedCard)"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/pages/pokemon/index.tsx",
      "line": 4,
      "content": "// Dynamic import with loading state"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/pages/pokemon/moves/[moveName].tsx",
      "line": 372,
      "content": "// Helper function for formatting secondary effects"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/pages/tcgsets/[setid].tsx",
      "line": 101,
      "content": "// Helper function to determine the actual rarity based on card data"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/pages/team-builder/advanced.tsx",
      "line": 24,
      "content": "// Dynamic import for the graph component to avoid SSR issues"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/pages/team-builder/ev-optimizer.tsx",
      "line": 33,
      "content": "// Dynamic import for the heat map component"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/styles/design-tokens.ts",
      "line": 180,
      "content": "// Utility function to combine classes"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/navigation-fix.spec.ts",
      "line": 122,
      "content": "// (like modals, tooltips) still function correctly"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/UnifiedCacheManager.ts",
      "line": 22,
      "content": "// Removed circular import - using direct fetch instead"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/UnifiedCacheManager.ts",
      "line": 24,
      "content": "// Simple fetch function to avoid circular dependency"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/UnifiedCacheManager.ts",
      "line": 737,
      "content": "// Use dynamic import to ensure proper loading"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/animationOptimization.ts",
      "line": 327,
      "content": "// Easing function (ease-out-cubic)"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/apiutils.ts",
      "line": 36,
      "content": "// Legacy fetchData function (now using unifiedFetch internally)"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/bulbapediaApi.ts",
      "line": 403,
      "content": "// Helper function to fetch and cache data"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/cardEffects.ts",
      "line": 12,
      "content": "// Keeping the function to prevent breaking existing code"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/dataTools.ts",
      "line": 474,
      "content": "// Log import summary"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/graphqlResolvers.ts",
      "line": 12,
      "content": "// import { PubSub } from 'graphql-subscriptions';"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/graphqlResolvers.ts",
      "line": 420,
      "content": "// Resolver function types"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/icons.ts",
      "line": 2,
      "content": "// Only import the icons that are actually used"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/initializeGlobalNotifications.ts",
      "line": 11,
      "content": "// This function should be called once after NotificationProvider is mounted"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/initializeGlobalNotifications.ts",
      "line": 32,
      "content": "// Cleanup function to remove global mutations"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/performanceTests.ts",
      "line": 672,
      "content": "// Export convenience function to run basic performance tests"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/pokemonTypeColors.ts",
      "line": 93,
      "content": "// Helper function to get type style"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/pokemonTypeColors.ts",
      "line": 108,
      "content": "// Helper function to get inline style string"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/reactOptimizations.ts",
      "line": 88,
      "content": "// Utility function for shallow comparison"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/reactOptimizations.ts",
      "line": 119,
      "content": "// Custom comparison function that monitors performance"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/scrapers/gymLeaderDirectScraper.ts",
      "line": 206,
      "content": "// Filter function for character images"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/scrapers/scraperUtils.ts",
      "line": 317,
      "content": "// Delay function for rate limiting"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/scrollHandler.ts",
      "line": 10,
      "content": "// Scroll handler object to avoid function detection issues"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/staggerAnimations.ts",
      "line": 239,
      "content": "// Helper function to get stagger delay based on index"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/staggerAnimations.ts",
      "line": 244,
      "content": "// Helper function for grid stagger (2D)"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/standardizedAnimations.ts",
      "line": 237,
      "content": "// Utility function to get animation props with reduced motion support"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/theme.ts",
      "line": 106,
      "content": "// Helper function to build theme-aware class strings"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/throttle.ts",
      "line": 1,
      "content": "// Throttle utility function - extracted from _app.tsx"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/throttle.ts",
      "line": 3,
      "content": "// Simple throttle function with proper cleanup"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/unifiedTypeColors.ts",
      "line": 129,
      "content": "// Helper function to blend two hex colors"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/validation.ts",
      "line": 394,
      "content": "// React import for the hook"
    }
  ],
  "todoComments": [
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/team-builder/TeamSynergyGraph.tsx",
      "line": 309,
      "content": "// TODO: Restore custom drawing functionality if needed"
    }
  ],
  "debugCode": [
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/FastRefreshTests/common/FastRefreshMonitor.tsx",
      "line": 51,
      "content": "const originalConsoleError = console.error;"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/FastRefreshTests/common/FastRefreshMonitor.tsx",
      "line": 52,
      "content": "const originalConsoleWarn = console.warn;"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/FastRefreshTests/common/FastRefreshMonitor.tsx",
      "line": 54,
      "content": "console.error = (...args) => {"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/FastRefreshTests/common/FastRefreshMonitor.tsx",
      "line": 65,
      "content": "console.warn = (...args) => {"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/FastRefreshTests/common/FastRefreshMonitor.tsx",
      "line": 77,
      "content": "console.error = originalConsoleError;"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/components/FastRefreshTests/common/FastRefreshMonitor.tsx",
      "line": 78,
      "content": "console.warn = originalConsoleWarn;"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/scripts/migrations/apply-items-migration.ts",
      "line": 14,
      "content": "console.error('Missing required environment variables');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/scripts/migrations/apply-items-migration.ts",
      "line": 30,
      "content": "console.error('Error applying migration:', error);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/scripts/migrations/apply-items-migration.ts",
      "line": 34,
      "content": "console.log('Attempting direct table creation...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/scripts/migrations/apply-items-migration.ts",
      "line": 37,
      "content": "console.log('Table will be created when syncing items data');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/scripts/migrations/apply-items-migration.ts",
      "line": 41,
      "content": "console.log('Migration applied successfully');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/scripts/migrations/apply-items-migration.ts",
      "line": 43,
      "content": "console.error('Error:', error);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/scripts/migrations/apply-items-migration.ts",
      "line": 44,
      "content": "console.log('Note: Table will be created automatically when syncing items data');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/core-pages-simple.spec.ts",
      "line": 95,
      "content": "console.log(`JavaScript errors on ${pagePath}:`, errors.map(e => e.message));"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/battle-simulator.spec.ts",
      "line": 141,
      "content": "console.log(`Found ${animationLogs.length} animation-related logs`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 19,
      "content": "console.log('=== Testing Console Logging Features ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 23,
      "content": "console.log(`Total console messages: ${totalMessages}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 26,
      "content": "console.log(`Errors: ${consoleLogger.getMessageCount('error')}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 27,
      "content": "console.log(`Warnings: ${consoleLogger.getMessageCount('warn')}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 28,
      "content": "console.log(`Info: ${consoleLogger.getMessageCount('info')}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 29,
      "content": "console.log(`Logs: ${consoleLogger.getMessageCount('log')}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 33,
      "content": "console.log(`Found ${reactMessages.length} React-related messages`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 36,
      "content": "console.log(`Found ${apiMessages.length} API-related messages`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 41,
      "content": "console.log('\\n=== Console Errors Found ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 43,
      "content": "console.log(`Network errors: ${categorized.networkErrors.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 44,
      "content": "console.log(`JavaScript errors: ${categorized.jsErrors.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 45,
      "content": "console.log(`Resource errors: ${categorized.resourceErrors.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 46,
      "content": "console.log(`Other errors: ${categorized.otherErrors.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 55,
      "content": "console.log(`\\nMessages after navigation: ${messagesAfterNav} (increased by ${messagesAfterNav - totalMessages})`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 59,
      "content": "console.log('This is a test log message');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 60,
      "content": "console.warn('This is a test warning');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 61,
      "content": "console.info('This is a test info message');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 63,
      "content": "// console.error('This is a test error');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 72,
      "content": "console.log('\\n=== Performance Metrics ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 73,
      "content": "console.log(`DOM Content Loaded: ${metrics.domContentLoaded}ms`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 74,
      "content": "console.log(`Page Load: ${metrics.load}ms`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 75,
      "content": "console.log(`First Paint: ${metrics.firstPaint}ms`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 76,
      "content": "console.log(`First Contentful Paint: ${metrics.firstContentfulPaint}ms`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 81,
      "content": "console.log(`\\nFound ${brokenImages.length} broken images:`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 82,
      "content": "brokenImages.forEach(img => console.log(`  - ${img}`));"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 87,
      "content": "console.log('\\n=== Full Console Report ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 88,
      "content": "console.log(consoleLogger.getReport());"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 109,
      "content": "console.error('This is an expected error for testing');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 138,
      "content": "console.log(`Messages generated by filtering: ${messagesAfterFilter.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 143,
      "content": "console.log('Performance-related logs found:');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/console-logging-demo.spec.ts",
      "line": 144,
      "content": "perfLogs.forEach(log => console.log(`  - ${log.text}`));"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/homepage.spec.ts",
      "line": 43,
      "content": "console.log(`Found ${warnings.length} warnings while loading popular cards`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/simple-console-test.spec.ts",
      "line": 12,
      "content": "console.log('=== Initial Console State ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/simple-console-test.spec.ts",
      "line": 13,
      "content": "console.log(`Total messages: ${consoleLogger.getMessageCount()}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/simple-console-test.spec.ts",
      "line": 14,
      "content": "console.log(`Errors: ${consoleLogger.getMessageCount('error')}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/simple-console-test.spec.ts",
      "line": 15,
      "content": "console.log(`Warnings: ${consoleLogger.getMessageCount('warn')}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/simple-console-test.spec.ts",
      "line": 16,
      "content": "console.log(`Info: ${consoleLogger.getMessageCount('info')}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/simple-console-test.spec.ts",
      "line": 17,
      "content": "console.log(`Logs: ${consoleLogger.getMessageCount('log')}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/simple-console-test.spec.ts",
      "line": 21,
      "content": "console.log('Test log message from Playwright');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/simple-console-test.spec.ts",
      "line": 22,
      "content": "console.info('Test info message');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/simple-console-test.spec.ts",
      "line": 23,
      "content": "console.warn('Test warning message');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/simple-console-test.spec.ts",
      "line": 37,
      "content": "console.log(`\\nFound ${testMessages.length} test messages`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/simple-console-test.spec.ts",
      "line": 39,
      "content": "console.log(`  - [${msg.type}] ${msg.text}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/simple-console-test.spec.ts",
      "line": 43,
      "content": "console.log('\\n=== Testing navigation ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/simple-console-test.spec.ts",
      "line": 50,
      "content": "console.log(`Messages increased by ${messagesAfter - messagesBefore} after navigation`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/simple-console-test.spec.ts",
      "line": 55,
      "content": "console.log(`\\n=== Warnings Found (${warnings.length}) ===`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/simple-console-test.spec.ts",
      "line": 57,
      "content": "console.log(`  - ${warn.text.substring(0, 100)}...`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/e2e/simple-console-test.spec.ts",
      "line": 61,
      "content": "console.log('\\n✅ Console logging is working correctly!');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 13,
      "content": "console.log(`[Reload Detected] Count: ${reloadCount}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 23,
      "content": "console.log(`[Fast Refresh] ${text}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 32,
      "content": "console.log(`[HMR Request] ${url}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 38,
      "content": "console.error(`[Page Error] ${error.message}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 42,
      "content": "console.log('Navigating to Pikachu page...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 47,
      "content": "console.log('Page loaded successfully');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 50,
      "content": "console.log('Starting 30-second monitoring period...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 64,
      "content": "console.log(`[${i * 5}s] Reloads: ${currentReloads}, Console logs: ${currentConsoles}, HMR requests: ${currentRequests}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 80,
      "content": "console.log('\\n=== DIAGNOSTIC RESULTS ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 81,
      "content": "console.log(`Total page reloads: ${totalReloads}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 82,
      "content": "console.log(`Fast Refresh messages: ${fastRefreshMessages.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 83,
      "content": "console.log(`HMR network requests: ${networkRequests.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 84,
      "content": "console.log(`Total console messages: ${consoleMessages.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 87,
      "content": "console.log('\\nSample console messages:');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 88,
      "content": "consoleMessages.slice(-10).forEach(msg => console.log(`  - ${msg}`));"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 109,
      "content": "console.log(`[LocalStorage] Set: ${key} = ${value}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 122,
      "content": "console.log(`[State Update ${stateUpdateCount}] ${text}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 131,
      "content": "console.log('Navigating to Bulbasaur page...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 136,
      "content": "console.log('Monitoring baseline activity for 10 seconds...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 140,
      "content": "console.log(`Baseline: ${stateUpdateCount - baselineUpdates} state updates in 10 seconds`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 143,
      "content": "console.log('\\nTesting tab interactions...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 148,
      "content": "console.log(`\\nClicking ${tab} tab...`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 155,
      "content": "console.log(`${tab} tab triggered ${afterClick} state updates`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 162,
      "content": "console.log(`\\nTotal localStorage updates: ${localStorageUpdates}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 172,
      "content": "console.log(`[Navigation] Count: ${navigationCount}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 180,
      "content": "console.log('Testing navigation arrows...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 184,
      "content": "console.log(`Clicking next arrow (${i + 1}/5)...`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 192,
      "content": "console.log(`Clicking prev arrow (${i + 1}/5)...`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 198,
      "content": "console.log(`Total navigations: ${navigationCount}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 211,
      "content": "console.log(`\\n=== Testing with ${component.name} hidden ===`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 228,
      "content": "console.log(`Monitoring for 15 seconds with ${component.name} hidden...`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 231,
      "content": "console.log(`Results with ${component.name} hidden:`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 232,
      "content": "console.log(`  - Reloads: ${reloadCount}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 233,
      "content": "console.log(`  - HMR requests: ${networkRequests.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 234,
      "content": "console.log(`  - Console messages: ${consoleMessages.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 251,
      "content": "console.log('Performance.memory API not available, skipping memory test');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 278,
      "content": "console.log('Initial memory usage:', initialMemory);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 281,
      "content": "console.log('Navigating between Pokemon...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 289,
      "content": "console.log(`After ${i + 1} navigations: ${currentMemory.usedJSHeapSize}MB used`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 301,
      "content": "console.log('Final memory usage:', finalMemory);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 304,
      "content": "console.log(`Memory increase: ${memoryIncrease}MB`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 320,
      "content": "console.log(`[LocalStorage Write] ${key} = ${value}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 335,
      "content": "console.log('Initial localStorage writes:', localStorageWrites.length);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 341,
      "content": "console.log('Writes after 5 seconds without interaction:', writesWithoutInteraction);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 350,
      "content": "console.log('Total localStorage writes:', localStorageWrites.length);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 351,
      "content": "console.log('Write log:', localStorageWrites);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fast-refresh-diagnostic.spec.ts",
      "line": 358,
      "content": "console.log('Duplicate writes:', duplicates.length);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/feature-pages.spec.ts",
      "line": 14,
      "content": "console.log(`Found ${items} items on first page`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/feature-pages.spec.ts",
      "line": 22,
      "content": "console.log(`Search for \"potion\" found ${searchResults} items`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/feature-pages.spec.ts",
      "line": 35,
      "content": "console.log(`Berry category has ${berryResults} items`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/feature-pages.spec.ts",
      "line": 44,
      "content": "console.log(`Page 2 has ${page2Items} items`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/feature-pages.spec.ts",
      "line": 57,
      "content": "console.log(`Found ${abilities} abilities on first page`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/feature-pages.spec.ts",
      "line": 65,
      "content": "console.log(`Search for \"intimidate\" found ${searchResults} abilities`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/feature-pages.spec.ts",
      "line": 78,
      "content": "console.log(`Offensive category has ${offensiveResults} abilities`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/feature-pages.spec.ts",
      "line": 97,
      "content": "console.log(`Found ${moves} moves on first page`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/feature-pages.spec.ts",
      "line": 102,
      "content": "console.log(`Found ${tmBadges} TM badges on this page`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/feature-pages.spec.ts",
      "line": 109,
      "content": "console.log(`Search for \"thunder\" found ${searchResults} moves`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/feature-pages.spec.ts",
      "line": 122,
      "content": "console.log(`Physical category has ${physicalResults} moves`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/feature-pages.spec.ts",
      "line": 131,
      "content": "console.log(`Gen 1 has ${gen1Results} moves`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/feature-pages.spec.ts",
      "line": 172,
      "content": "console.log(`Found ${teamSlots} team slots`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/feature-pages.spec.ts",
      "line": 185,
      "content": "console.log('Found EV/IV section in Team Builder');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/feature-pages.spec.ts",
      "line": 190,
      "content": "console.log(`Found ${statInputs} stat input controls`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/feature-pages.spec.ts",
      "line": 194,
      "content": "console.log(`Found ${teamSlots} team member slots`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fixtures/test-base.ts",
      "line": 82,
      "content": "console.log('\\n' + consoleLogger.getReport());"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/fixtures/test-base.ts",
      "line": 95,
      "content": "console.log('[TEST] API mocking enabled - all external API calls will be intercepted');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/helpers/api-mock.ts",
      "line": 877,
      "content": "console.log(`[TEST] Mocking TCG set request: ${url}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/helpers/api-mock.ts",
      "line": 902,
      "content": "console.log(`[TEST] Mocking TCG cards request: ${url}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/helpers/api-mock.ts",
      "line": 1045,
      "content": "console.log(`[TEST] Blocked TCG API call to: ${route.request().url()}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/helpers/page-helpers.ts",
      "line": 238,
      "content": "console.log(`Testing at ${breakpoint.name} (${breakpoint.width}x${breakpoint.height})`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/helpers/test-utils.ts",
      "line": 38,
      "content": "console.error(`Failed to navigate to ${url}:`, error);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/helpers/test-utils.ts",
      "line": 177,
      "content": "console.log(`>> ${request.method()} ${request.url()}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/helpers/test-utils.ts",
      "line": 181,
      "content": "console.log(`<< ${response.status()} ${response.url()}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/localstorage-loop-check.spec.ts",
      "line": 12,
      "content": "console.log(`[LocalStorage SET] ${key} = ${value} at ${Date.now()}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/localstorage-loop-check.spec.ts",
      "line": 18,
      "content": "console.log(`[LocalStorage GET] ${key} = ${value} at ${Date.now()}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/localstorage-loop-check.spec.ts",
      "line": 39,
      "content": "console.log('Navigating to page...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/localstorage-loop-check.spec.ts",
      "line": 43,
      "content": "console.log('Page loaded, monitoring for 10 seconds...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/localstorage-loop-check.spec.ts",
      "line": 49,
      "content": "console.log(`\\nTotal localStorage operations: ${localStorageWrites.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/localstorage-loop-check.spec.ts",
      "line": 58,
      "content": "console.log('\\nOperations by key:');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/localstorage-loop-check.spec.ts",
      "line": 60,
      "content": "console.log(`  ${key}: ${ops.length} operations`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/localstorage-loop-check.spec.ts",
      "line": 68,
      "content": "console.log(`    WARNING: Rapid writes detected! ${timeDiff}ms between writes`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/mobile-debug.spec.ts",
      "line": 16,
      "content": "console.log('Window innerWidth:', innerWidth);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/mobile-debug.spec.ts",
      "line": 20,
      "content": "console.log('Should render mobile (< 430):', shouldBeMobile);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/mobile-debug.spec.ts",
      "line": 27,
      "content": "console.log('Has .mobile-layout:', hasMobileLayout);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/mobile-debug.spec.ts",
      "line": 28,
      "content": "console.log('Has .mobile-pokedex:', hasMobilePokedex);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/mobile-debug.spec.ts",
      "line": 29,
      "content": "console.log('Has desktop layout (.max-w-7xl):', hasDesktopLayout);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/mobile-debug.spec.ts",
      "line": 33,
      "content": "console.log('Body classes:', bodyClasses);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/mobile-debug.spec.ts",
      "line": 37,
      "content": "console.log('Viewport size:', viewportSize);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokedex-error-test.spec.ts",
      "line": 7,
      "content": "console.log('Console error:', msg.text());"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokedex-error-test.spec.ts",
      "line": 12,
      "content": "console.log('Page error:', error.message);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokedex-error-test.spec.ts",
      "line": 27,
      "content": "console.log('Error found on page:', errorText);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokedex-error-test.spec.ts",
      "line": 32,
      "content": "console.log('Page title:', title);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-detail-debug.spec.ts",
      "line": 9,
      "content": "console.error('Page error:', error.message);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-detail-debug.spec.ts",
      "line": 15,
      "content": "console.error('Console error:', msg.text());"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-detail-debug.spec.ts",
      "line": 30,
      "content": "console.log('Page title:', title);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-detail-debug.spec.ts",
      "line": 34,
      "content": "console.error('Errors found:', errors);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-detail-debug.spec.ts",
      "line": 40,
      "content": "console.log('Pokemon name element found:', nameElement);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-detail-network.spec.ts",
      "line": 19,
      "content": "console.log(`Error response: ${response.status()} ${response.url()}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-detail-network.spec.ts",
      "line": 24,
      "content": "console.log('Navigating to /pokedex/pikachu...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-detail-network.spec.ts",
      "line": 31,
      "content": "console.log('\\n=== All Requests ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-detail-network.spec.ts",
      "line": 32,
      "content": "requests.forEach(req => console.log(req));"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-detail-network.spec.ts",
      "line": 34,
      "content": "console.log('\\n=== Failed Requests ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-detail-network.spec.ts",
      "line": 35,
      "content": "failedRequests.forEach(req => console.log(req));"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-detail-network.spec.ts",
      "line": 39,
      "content": "console.log('\\n=== Page Body (first 500 chars) ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-detail-network.spec.ts",
      "line": 40,
      "content": "console.log(bodyText.substring(0, 500));"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-detail-network.spec.ts",
      "line": 47,
      "content": "console.log('\\n=== Element Checks ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-detail-network.spec.ts",
      "line": 48,
      "content": "console.log('Has Error:', hasError);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-detail-network.spec.ts",
      "line": 49,
      "content": "console.log('Has Loading:', hasLoading);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-detail-network.spec.ts",
      "line": 50,
      "content": "console.log('Has Pokemon Name:', hasPokemonName);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-detail-network.spec.ts",
      "line": 61,
      "content": "console.log('\\n=== JavaScript Errors ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-detail-network.spec.ts",
      "line": 62,
      "content": "jsErrors.forEach(err => console.log(err));"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-moves-enhanced-test.spec.ts",
      "line": 5,
      "content": "console.log('Testing enhanced moves display...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-moves-enhanced-test.spec.ts",
      "line": 21,
      "content": "console.log('Type badges found:', typeBadgeCount);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-moves-enhanced-test.spec.ts",
      "line": 25,
      "content": "console.log('Power/Accuracy displays found:', powerAccuracyText);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-moves-enhanced-test.spec.ts",
      "line": 39,
      "content": "console.log('Enhanced display visible:', enhancedDisplay);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-moves-enhanced-test.spec.ts",
      "line": 41,
      "content": "console.log('\\nEnhanced moves display test complete!');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-moves-tab-test.spec.ts",
      "line": 10,
      "content": "console.log('Console:', text);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-moves-tab-test.spec.ts",
      "line": 15,
      "content": "console.log('Navigating to Pikachu page...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-moves-tab-test.spec.ts",
      "line": 23,
      "content": "console.log('Clicking Moves tab...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-moves-tab-test.spec.ts",
      "line": 38,
      "content": "console.log('\\n=== MOVES TAB TEST RESULTS ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-moves-tab-test.spec.ts",
      "line": 39,
      "content": "console.log('Error visible:', errorVisible);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-moves-tab-test.spec.ts",
      "line": 40,
      "content": "console.log('Error text:', errorText);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-moves-tab-test.spec.ts",
      "line": 41,
      "content": "console.log('Moves count:', movesCount);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-moves-tab-test.spec.ts",
      "line": 42,
      "content": "console.log('Loading visible:', loadingVisible);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-moves-tab-test.spec.ts",
      "line": 43,
      "content": "console.log('Learnset visible:', learnsetVisible);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-moves-tab-test.spec.ts",
      "line": 49,
      "content": "console.log('\\n=== RELEVANT CONSOLE LOGS ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-moves-tab-test.spec.ts",
      "line": 55,
      "content": ").forEach(log => console.log(log));"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/pokemon-tab-check.spec.ts",
      "line": 23,
      "content": "console.log('✅ Tab click test passed!');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 24,
      "content": "console.log('Console errors found:', errors);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 30,
      "content": "console.log('\\n=== Testing Homepage ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 44,
      "content": "console.log('✓ Hero section loaded');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 50,
      "content": "console.log('✓ Popular cards section loaded');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 58,
      "content": "console.log('✓ Search bar functional');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 63,
      "content": "console.log(`Console errors: ${errors.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 68,
      "content": "console.log('\\n=== Testing Pokedex ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 75,
      "content": "console.log('✗ Pokemon grid not found');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 82,
      "content": "console.log('✓ Search input functional');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 88,
      "content": "console.log('✓ Type filter present');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 94,
      "content": "console.log(`Pokemon cards loaded: ${cardCount}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 101,
      "content": "console.log('✓ Pokemon detail navigation works');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 107,
      "content": "console.log(`Console errors: ${errors.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 112,
      "content": "console.log('\\n=== Testing TCG Sets ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 119,
      "content": "console.log('✗ Sets grid not found');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 125,
      "content": "console.log(`TCG sets loaded: ${setCount}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 131,
      "content": "console.log('✓ Search bar functional');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 139,
      "content": "console.log('✓ Set detail navigation works');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 145,
      "content": "console.log(`Console errors: ${errors.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 150,
      "content": "console.log('\\n=== Testing Pocket Mode ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 161,
      "content": "console.log('✓ Decks link present');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 166,
      "content": "console.log('✓ Expansions link present');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 170,
      "content": "console.log(`Console errors: ${errors.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 175,
      "content": "console.log('\\n=== Testing Battle Simulator ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 182,
      "content": "console.log(`Pokemon selectors found: ${selectorCount}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 187,
      "content": "console.log('✓ Battle button present');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 193,
      "content": "console.log('✓ Stats display present');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 197,
      "content": "console.log(`Console errors: ${errors.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 202,
      "content": "console.log('\\n=== Testing Type Effectiveness ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 209,
      "content": "console.log('✓ Type matrix loaded');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 215,
      "content": "console.log(`Type selectors found: ${typeSelectorCount}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 218,
      "content": "console.log(`Console errors: ${errors.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 223,
      "content": "console.log('\\n=== Testing Pokemon Starters ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 230,
      "content": "console.log(`Generation tabs found: ${tabCount}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 235,
      "content": "console.log(`Starter Pokemon displayed: ${starterCount}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 238,
      "content": "console.log(`Console errors: ${errors.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 243,
      "content": "console.log('\\n=== Testing Team Builder ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 249,
      "content": "console.log(`Page title: ${pageTitle}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 254,
      "content": "console.log(`Team slots found: ${slotCount}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 257,
      "content": "console.log(`Console errors: ${errors.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 262,
      "content": "console.log('\\n=== Testing 404 Page ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 269,
      "content": "console.log(`404 heading: ${headingText}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 274,
      "content": "console.log('✓ Home link present');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 278,
      "content": "console.log(`Console errors: ${errors.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 283,
      "content": "console.log('\\n=== Testing Mobile Responsiveness ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 294,
      "content": "console.log('✓ Mobile menu present');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 301,
      "content": "console.log('✓ No horizontal overflow on mobile');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 303,
      "content": "console.log(`✗ Horizontal overflow detected: ${bodyWidth}px > ${viewportWidth}px`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 307,
      "content": "console.log(`Console errors: ${errors.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 312,
      "content": "console.log('\\n=== Testing Performance Metrics ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 327,
      "content": "console.log('Performance metrics:', metrics);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-comprehensive-check.spec.ts",
      "line": 330,
      "content": "console.log('⚠️ Slow First Contentful Paint detected');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-route-check.spec.ts",
      "line": 22,
      "content": "console.log(`\\n=== Checking ${route.name} (${route.path}) ===`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-route-check.spec.ts",
      "line": 84,
      "content": "console.log(`✓ Loaded successfully`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-route-check.spec.ts",
      "line": 85,
      "content": "console.log(`  Title: ${title}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-route-check.spec.ts",
      "line": 86,
      "content": "console.log(`  Console errors: ${consoleErrors.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-route-check.spec.ts",
      "line": 87,
      "content": "console.log(`  Network errors: ${networkErrors.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-route-check.spec.ts",
      "line": 89,
      "content": "console.log(`  First error: ${consoleErrors[0]}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-route-check.spec.ts",
      "line": 102,
      "content": "console.log(`✗ Failed to load: ${error.message}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-route-check.spec.ts",
      "line": 112,
      "content": "console.log('\\n\\n=== SUMMARY REPORT ===\\n');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-route-check.spec.ts",
      "line": 114,
      "content": "console.log('Route Status:');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-route-check.spec.ts",
      "line": 118,
      "content": "console.log(`${status} ${result.name} - Console Errors: ${errors}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-route-check.spec.ts",
      "line": 121,
      "content": "console.log('\\n\\nDetailed Issues:');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-route-check.spec.ts",
      "line": 124,
      "content": "console.log(`\\n${result.name} (${result.route}):`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-route-check.spec.ts",
      "line": 126,
      "content": "console.log(`  - Failed to load: ${result.error}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-route-check.spec.ts",
      "line": 129,
      "content": "console.log(`  - Errors:`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-route-check.spec.ts",
      "line": 130,
      "content": "result.errors.forEach(err => console.log(`    • ${err.substring(0, 100)}...`));"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/qa-smoke-test.spec.ts",
      "line": 64,
      "content": "console.log(`Console errors on ${route.name}:`, consoleErrors);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-fast-refresh-check.spec.ts",
      "line": 11,
      "content": "console.log(`[Page Reload] Count: ${reloadCount} at ${new Date().toISOString()}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-fast-refresh-check.spec.ts",
      "line": 19,
      "content": "console.log(`[Console Error] ${text}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-fast-refresh-check.spec.ts",
      "line": 29,
      "content": "console.error(`[Page Error] ${error.message}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-fast-refresh-check.spec.ts",
      "line": 33,
      "content": "console.log('Navigating to Pikachu page...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-fast-refresh-check.spec.ts",
      "line": 38,
      "content": "console.log('Page loaded. Starting 20-second monitoring...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-fast-refresh-check.spec.ts",
      "line": 44,
      "content": "console.log(`[${i * 5 + 5}s] Reloads: ${reloadCount}, HMR Errors: ${hmrErrors}, Total Console Errors: ${consoleErrors.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-fast-refresh-check.spec.ts",
      "line": 49,
      "content": "console.log('\\n=== RESULTS ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-fast-refresh-check.spec.ts",
      "line": 50,
      "content": "console.log(`Monitoring duration: ${elapsed}ms`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-fast-refresh-check.spec.ts",
      "line": 51,
      "content": "console.log(`Total reloads: ${reloadCount}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-fast-refresh-check.spec.ts",
      "line": 52,
      "content": "console.log(`HMR errors: ${hmrErrors}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-fast-refresh-check.spec.ts",
      "line": 53,
      "content": "console.log(`Console errors: ${consoleErrors.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-fast-refresh-check.spec.ts",
      "line": 56,
      "content": "console.log('\\nUnique console errors:');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-fast-refresh-check.spec.ts",
      "line": 58,
      "content": "uniqueErrors.forEach(err => console.log(`  - ${err}`));"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-pokemon-check.spec.ts",
      "line": 19,
      "content": "console.log('Navigating to Pokemon detail page...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-pokemon-check.spec.ts",
      "line": 26,
      "content": "console.log('Response status:', response?.status());"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-pokemon-check.spec.ts",
      "line": 33,
      "content": "console.log('Page title:', title);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-pokemon-check.spec.ts",
      "line": 44,
      "content": "console.log('Could not find Pokemon name with standard selectors');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-pokemon-check.spec.ts",
      "line": 47,
      "content": "console.log('Pokemon name found:', pokemonName);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-pokemon-check.spec.ts",
      "line": 51,
      "content": "console.log('Screenshot saved as butterfree-page.png');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-pokemon-check.spec.ts",
      "line": 57,
      "content": "console.log('\\n=== Console Messages Summary ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-pokemon-check.spec.ts",
      "line": 58,
      "content": "console.log(`Total messages: ${consoleMessages.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-pokemon-check.spec.ts",
      "line": 59,
      "content": "console.log(`Errors: ${errors.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-pokemon-check.spec.ts",
      "line": 60,
      "content": "console.log(`Warnings: ${warnings.length}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-pokemon-check.spec.ts",
      "line": 63,
      "content": "console.log('\\n❌ Console Errors:');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-pokemon-check.spec.ts",
      "line": 65,
      "content": "console.log(`${i + 1}. ${error.text}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-pokemon-check.spec.ts",
      "line": 70,
      "content": "console.log('\\n⚠️  Console Warnings:');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-pokemon-check.spec.ts",
      "line": 72,
      "content": "console.log(`${i + 1}. ${warning.text}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/simple-pokemon-check.spec.ts",
      "line": 75,
      "content": "console.log(`... and ${warnings.length - 5} more warnings`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/supabase-integration-test.spec.ts",
      "line": 11,
      "content": "console.log('Browser:', text);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/supabase-integration-test.spec.ts",
      "line": 27,
      "content": "console.log('Clicking on Moves tab...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/supabase-integration-test.spec.ts",
      "line": 31,
      "content": "console.log('Waiting for content to load...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/supabase-integration-test.spec.ts",
      "line": 42,
      "content": "console.log('\\n=== Test Results ===');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/supabase-integration-test.spec.ts",
      "line": 43,
      "content": "console.log('Error displayed:', errorText || 'None');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/supabase-integration-test.spec.ts",
      "line": 44,
      "content": "console.log('Moves found:', movesCount);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/supabase-integration-test.spec.ts",
      "line": 45,
      "content": "console.log('Loading state:', loadingVisible ? 'Still loading' : 'Loaded');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/supabase-integration-test.spec.ts",
      "line": 46,
      "content": "console.log('\\nConsole messages:');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/supabase-integration-test.spec.ts",
      "line": 47,
      "content": "consoleMessages.forEach(msg => console.log('  -', msg));"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/supabase-integration-test.spec.ts",
      "line": 54,
      "content": "console.log('\\n⚠️  Error found:', errorText);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/supabase-integration-test.spec.ts",
      "line": 56,
      "content": "console.log('This suggests Supabase is not connecting properly or tables are missing.');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/supabase-integration-test.spec.ts",
      "line": 59,
      "content": "console.log('\\n✅ Success! Found', movesCount, 'moves for Pikachu');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/supabase-integration-test.spec.ts",
      "line": 61,
      "content": "console.log('\\n⏳ Still loading after 10 seconds - possible timeout');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/supabase-integration-test.spec.ts",
      "line": 77,
      "content": "console.log('Supabase-related console logs:');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/supabase-integration-test.spec.ts",
      "line": 78,
      "content": "logs.forEach(log => console.log(' -', log));"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-cardlist-test.spec.ts",
      "line": 21,
      "content": "console.log(`Found ${cardElements} cards rendered`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-cardlist-test.spec.ts",
      "line": 29,
      "content": "console.log('500-card limit message is displayed');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-cardlist-test.spec.ts",
      "line": 46,
      "content": "console.log(`Found ${cardElements} cards in small set`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-cardlist-test.spec.ts",
      "line": 58,
      "content": "console.log('Found Load All Cards button, clicking it');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-cardlist-test.spec.ts",
      "line": 66,
      "content": "console.log(`Cards after Load All: ${cardElements}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-cardlist-test.spec.ts",
      "line": 69,
      "content": "console.log('No Load All Cards button needed - cards loaded automatically');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-debug.spec.ts",
      "line": 15,
      "content": "console.log('Loading visible:', loading);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-debug.spec.ts",
      "line": 19,
      "content": "console.log('Error visible:', error);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-debug.spec.ts",
      "line": 23,
      "content": "console.log('Set cards found:', setCards);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-debug.spec.ts",
      "line": 27,
      "content": "console.log('Grid containers found:', grid);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-debug.spec.ts",
      "line": 32,
      "content": "console.log('Console error:', msg.text());"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-debug.spec.ts",
      "line": 41,
      "content": "console.log('Final set cards in grid:', finalSetCards);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-debug.spec.ts",
      "line": 46,
      "content": "console.log('Page contains error text');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-debug.spec.ts",
      "line": 55,
      "content": "console.log('API response:', JSON.stringify(apiResponse, null, 2));"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-mobile-test.spec.ts",
      "line": 16,
      "content": "console.log(`Mobile 320px - Grid items: ${gridItems}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-mobile-test.spec.ts",
      "line": 36,
      "content": "console.log(`Tablet 768px - Grid items: ${gridItems}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-check.spec.ts",
      "line": 5,
      "content": "console.log('Testing set detail page for sv10...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-check.spec.ts",
      "line": 24,
      "content": "console.log('Page status:');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-check.spec.ts",
      "line": 25,
      "content": "console.log('- Has error:', hasError);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-check.spec.ts",
      "line": 26,
      "content": "console.log('- Has loading:', hasLoading);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-check.spec.ts",
      "line": 27,
      "content": "console.log('- Has title:', hasTitle);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-check.spec.ts",
      "line": 28,
      "content": "console.log('- Title text:', titleText);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-check.spec.ts",
      "line": 29,
      "content": "console.log('- Has cards:', hasCards);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-check.spec.ts",
      "line": 30,
      "content": "console.log('- Card count:', cardCount);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-check.spec.ts",
      "line": 56,
      "content": "console.log('\\nConsole errors:');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-check.spec.ts",
      "line": 57,
      "content": "consoleLogs.forEach(log => console.log(`[${log.type}] ${log.text}`));"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-check.spec.ts",
      "line": 59,
      "content": "console.log('\\nFailed requests:');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-check.spec.ts",
      "line": 60,
      "content": "failedRequests.forEach(req => console.log(`Failed: ${req.url} - ${req.failure?.errorText}`));"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-check.spec.ts",
      "line": 63,
      "content": "console.log('\\n\\nTesting base1 set...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-check.spec.ts",
      "line": 71,
      "content": "console.log('Base1 page:');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-check.spec.ts",
      "line": 72,
      "content": "console.log('- Has title:', base1HasTitle);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-check.spec.ts",
      "line": 73,
      "content": "console.log('- Title text:', base1TitleText);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-check.spec.ts",
      "line": 74,
      "content": "console.log('- Card count:', base1CardCount);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-check.spec.ts",
      "line": 77,
      "content": "console.log('\\n\\nChecking API endpoints...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-check.spec.ts",
      "line": 79,
      "content": "console.log('API /api/tcg-sets/sv10 status:', apiResponse.status());"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-check.spec.ts",
      "line": 82,
      "content": "console.log('API response has set:', !!data.set);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-check.spec.ts",
      "line": 83,
      "content": "console.log('API response cards count:', data.cards?.length || 0);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-quick-test.spec.ts",
      "line": 14,
      "content": "console.log(`Found ${skeletons} skeleton loaders`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-quick-test.spec.ts",
      "line": 19,
      "content": "console.log(`Page title: ${title}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-quick-test.spec.ts",
      "line": 27,
      "content": "console.log(`Found emoji in button: \"${text}\"`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-quick-test.spec.ts",
      "line": 63,
      "content": "console.log('✅ All improvements verified!');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-quick-test.spec.ts",
      "line": 75,
      "content": "console.log(`Page load time: ${loadTime}ms`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail-quick-test.spec.ts",
      "line": 83,
      "content": "console.log(`Cards loaded: ${cardCount}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-detail.spec.ts",
      "line": 29,
      "content": "console.error('Console error:', text);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-direct-nav.spec.ts",
      "line": 4,
      "content": "console.log('Testing direct navigation to sv10...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-direct-nav.spec.ts",
      "line": 13,
      "content": "console.log(`[PAGE ${msg.type()}] ${text}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-direct-nav.spec.ts",
      "line": 29,
      "content": "console.log('\\nPage analysis:');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-direct-nav.spec.ts",
      "line": 30,
      "content": "console.log('- URL:', page.url());"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-direct-nav.spec.ts",
      "line": 31,
      "content": "console.log('- Has \"Set Not Found\":', hasSetNotFound);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-direct-nav.spec.ts",
      "line": 32,
      "content": "console.log('- Has loading text:', hasLoading);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-direct-nav.spec.ts",
      "line": 33,
      "content": "console.log('- Has error:', hasError);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-direct-nav.spec.ts",
      "line": 37,
      "content": "console.log('- Number of h1 elements:', h1Elements.length);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-direct-nav.spec.ts",
      "line": 40,
      "content": "console.log('- H1 text:', h1Text);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-direct-nav.spec.ts",
      "line": 45,
      "content": "console.log('\\nVisible text on page (first 500 chars):');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-direct-nav.spec.ts",
      "line": 46,
      "content": "console.log(visibleText.substring(0, 500));"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-direct-nav.spec.ts",
      "line": 66,
      "content": "console.log('\\nAll console logs:');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-direct-nav.spec.ts",
      "line": 67,
      "content": "consoleLogs.forEach(log => console.log(log));"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-direct-nav.spec.ts",
      "line": 69,
      "content": "console.log('\\nAPI requests made:', apiRequests);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-direct-nav.spec.ts",
      "line": 70,
      "content": "console.log('Failed requests:', failedRequests);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-navigation-test.spec.ts",
      "line": 5,
      "content": "console.log('Starting navigation test...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-navigation-test.spec.ts",
      "line": 19,
      "content": "console.log('Clicking on set:', setName);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-navigation-test.spec.ts",
      "line": 37,
      "content": "console.log('Navigated to:', currentUrl);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-navigation-test.spec.ts",
      "line": 43,
      "content": "console.log('\\nConsole logs from page:');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-navigation-test.spec.ts",
      "line": 45,
      "content": "console.log(`[${log.type}] ${log.text}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-navigation-test.spec.ts",
      "line": 54,
      "content": "console.log('\\nPage state:');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-navigation-test.spec.ts",
      "line": 55,
      "content": "console.log('- Has loading text:', hasLoadingText);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-navigation-test.spec.ts",
      "line": 56,
      "content": "console.log('- Has \"Set Not Found\":', hasSetNotFound);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-navigation-test.spec.ts",
      "line": 57,
      "content": "console.log('- Has error:', hasError);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-navigation-test.spec.ts",
      "line": 58,
      "content": "console.log('- Has title (h1):', hasTitle);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-navigation-test.spec.ts",
      "line": 62,
      "content": "console.log('- Title text:', titleText);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-navigation-test.spec.ts",
      "line": 70,
      "content": "console.log('\\nWaiting for loading to complete...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-navigation-test.spec.ts",
      "line": 76,
      "content": "console.log('After wait:');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-navigation-test.spec.ts",
      "line": 77,
      "content": "console.log('- Still loading:', stillLoading);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-navigation-test.spec.ts",
      "line": 78,
      "content": "console.log('- Has \"Set Not Found\":', hasSetNotFoundAfterWait);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-performance.spec.ts",
      "line": 23,
      "content": "console.log('Progressive loading is working - loading indicator found');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-performance.spec.ts",
      "line": 29,
      "content": "console.log('Virtualized grid is being used for performance');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-performance.spec.ts",
      "line": 34,
      "content": "console.log(`Page became interactive in ${loadTime}ms`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-set-performance.spec.ts",
      "line": 59,
      "content": "console.log('Performance warnings:', consoleMessages);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-comprehensive.spec.ts",
      "line": 10,
      "content": "console.log('Testing: TCG Sets page loads and displays sets');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-comprehensive.spec.ts",
      "line": 27,
      "content": "console.log(`Found ${setCount} sets displayed`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-comprehensive.spec.ts",
      "line": 46,
      "content": "console.log('Console logs:', consoleLogs);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-comprehensive.spec.ts",
      "line": 50,
      "content": "console.log('Testing: Search and filtering functionality');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-comprehensive.spec.ts",
      "line": 68,
      "content": "console.log(`Filtered to ${filteredCount} sets containing \"Base\"`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-comprehensive.spec.ts",
      "line": 90,
      "content": "console.log('Testing: Individual set page functionality');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-comprehensive.spec.ts",
      "line": 105,
      "content": "console.log(`Clicking on set: ${setName}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-comprehensive.spec.ts",
      "line": 128,
      "content": "console.log(`Found ${cardCount} cards in the set`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-comprehensive.spec.ts",
      "line": 133,
      "content": "console.log('Testing: Error handling for invalid set IDs');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-comprehensive.spec.ts",
      "line": 157,
      "content": "console.log('Testing: Refresh button functionality');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-comprehensive.spec.ts",
      "line": 185,
      "content": "console.log('Testing: Infinite scroll with filtered results');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-comprehensive.spec.ts",
      "line": 195,
      "content": "console.log(`Initial visible sets: ${initialCards}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-comprehensive.spec.ts",
      "line": 203,
      "content": "console.log(`After scroll visible sets: ${afterScrollCards}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-comprehensive.spec.ts",
      "line": 212,
      "content": "console.log('Testing: Page load performance');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-comprehensive.spec.ts",
      "line": 222,
      "content": "console.log(`Header loaded in ${headerLoadTime}ms`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-comprehensive.spec.ts",
      "line": 229,
      "content": "console.log(`First set visible in ${firstSetLoadTime}ms`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-quick-check.spec.ts",
      "line": 5,
      "content": "console.log('Navigating to TCG sets page...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-quick-check.spec.ts",
      "line": 23,
      "content": "console.log('Page status:');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-quick-check.spec.ts",
      "line": 24,
      "content": "console.log('- Has error:', hasError);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-quick-check.spec.ts",
      "line": 25,
      "content": "console.log('- Has \"No Sets Found\":', hasNoSetsFound);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-quick-check.spec.ts",
      "line": 26,
      "content": "console.log('- Has loading text:', hasLoadingText);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-quick-check.spec.ts",
      "line": 27,
      "content": "console.log('- Has grid:', hasGrid);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-quick-check.spec.ts",
      "line": 28,
      "content": "console.log('- Has set cards:', hasSetCards);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-quick-check.spec.ts",
      "line": 38,
      "content": "console.log('Visible sets count:', visibleSets);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-quick-check.spec.ts",
      "line": 53,
      "content": "console.log('\\nConsole logs:');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-quick-check.spec.ts",
      "line": 56,
      "content": "console.log(`[${log.type}] ${log.text}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-quick-check.spec.ts",
      "line": 62,
      "content": "console.log('\\nTrying to click on first set...');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-quick-check.spec.ts",
      "line": 68,
      "content": "console.log('Current URL after click:', currentUrl);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-quick-check.spec.ts",
      "line": 72,
      "content": "console.log('Successfully navigated to set detail page');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-quick-check.spec.ts",
      "line": 78,
      "content": "console.log('- Has set title:', hasSetTitle);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-quick-check.spec.ts",
      "line": 79,
      "content": "console.log('- Has card images:', hasCards);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-quick-check.spec.ts",
      "line": 85,
      "content": "console.log('\\n⚠️  \"No Sets Found\" is displayed - there might be an API issue');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-quick-check.spec.ts",
      "line": 87,
      "content": "console.log(`\\n✅ ${visibleSets} sets are visible on the page`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-sets-quick-check.spec.ts",
      "line": 89,
      "content": "console.log('\\n❌ No sets are visible and no error message');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-simple.spec.ts",
      "line": 6,
      "content": "console.log(`Browser console: ${msg.type()}: ${msg.text()}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-simple.spec.ts",
      "line": 11,
      "content": "console.log(`Page error: ${error.message}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-simple.spec.ts",
      "line": 25,
      "content": "console.log('Page state after 5 seconds:');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-simple.spec.ts",
      "line": 26,
      "content": "console.log('- Loading visible:', loading);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-simple.spec.ts",
      "line": 27,
      "content": "console.log('- Error visible:', error);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-simple.spec.ts",
      "line": 28,
      "content": "console.log('- Grid items:', gridItems);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-simple.spec.ts",
      "line": 38,
      "content": "console.log('Found React root');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/tcg-simple.spec.ts",
      "line": 43,
      "content": "console.log('Sets in DOM:', setsCount);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/unified-homepage.spec.ts",
      "line": 15,
      "content": "console.log(`Mobile: Search button visible = ${mobileSearchButton > 0}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/unified-homepage.spec.ts",
      "line": 19,
      "content": "console.log(`Mobile: Found ${mobileCards} responsive cards`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/unified-homepage.spec.ts",
      "line": 32,
      "content": "console.log(`Tablet: Grid layout visible = ${tabletGrid > 0}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/unified-homepage.spec.ts",
      "line": 45,
      "content": "console.log(`Desktop: Search bar visible = ${desktopSearch > 0}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/unified-homepage.spec.ts",
      "line": 49,
      "content": "console.log(`Desktop: 4-column grid = ${desktopGrid > 0}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/unified-homepage.spec.ts",
      "line": 63,
      "content": "console.log(`Navigation test: Clicked Pokédex, URL = ${url}`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/unified-homepage.spec.ts",
      "line": 66,
      "content": "console.log('Homepage responsive test completed successfully');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/unified-moves.spec.ts",
      "line": 15,
      "content": "console.log(`Mobile view: Found ${mobileCards} cards`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/unified-moves.spec.ts",
      "line": 29,
      "content": "console.log(`Desktop view: Found ${desktopTable} tables`);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/unified-moves.spec.ts",
      "line": 49,
      "content": "console.log('Moves page responsive test completed successfully');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/tests/visual-check.spec.ts",
      "line": 44,
      "content": "console.log('Screenshots saved to screenshots/ directory');"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/fastRefresh/monitor.ts",
      "line": 47,
      "content": "const originalError = console.error;"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/fastRefresh/monitor.ts",
      "line": 48,
      "content": "const originalWarn = console.warn;"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/fastRefresh/monitor.ts",
      "line": 50,
      "content": "console.error = (...args) => {"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/fastRefresh/monitor.ts",
      "line": 62,
      "content": "console.warn = (...args) => {"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 86,
      "content": "console.error(formatted.message, formatted.context);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 87,
      "content": "} else if (!isClient && typeof console !== 'undefined' && console.error) {"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 88,
      "content": "console.error(formatted.message, formatted.context);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 100,
      "content": "console.warn(formatted.message, formatted.context);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 101,
      "content": "} else if (!isClient && typeof console !== 'undefined' && console.warn) {"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 102,
      "content": "console.warn(formatted.message, formatted.context);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 114,
      "content": "console.info(formatted.message, formatted.context);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 115,
      "content": "} else if (!isClient && typeof console !== 'undefined' && console.info) {"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 116,
      "content": "console.info(formatted.message, formatted.context);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 128,
      "content": "console.log(formatted.message, formatted.context);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 129,
      "content": "} else if (!isClient && typeof console !== 'undefined' && console.log) {"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 130,
      "content": "console.log(formatted.message, formatted.context);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 142,
      "content": "console.log(formatted.message, formatted.context);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 143,
      "content": "} else if (!isClient && typeof console !== 'undefined' && console.log) {"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 144,
      "content": "console.log(formatted.message, formatted.context);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 153,
      "content": "if (isDevelopment && typeof console !== 'undefined' && console.time) {"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 154,
      "content": "console.time(label);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 159,
      "content": "if (isDevelopment && typeof console !== 'undefined' && console.timeEnd) {"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 160,
      "content": "console.timeEnd(label);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 168,
      "content": "if (isDevelopment && typeof console !== 'undefined' && console.group) {"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 169,
      "content": "console.group(label);"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 174,
      "content": "if (isDevelopment && typeof console !== 'undefined' && console.groupEnd) {"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 175,
      "content": "console.groupEnd();"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 183,
      "content": "if (isDevelopment && typeof console !== 'undefined' && console.table) {"
    },
    {
      "file": "/Users/moazzam/GitHub/Mappy/DexTrends/utils/logger.ts",
      "line": 184,
      "content": "console.table(data);"
    }
  ]
}